class RWC_Switch extends HTMLElement{static formAssociated=!0;static get observedAttributes(){return["value","required","switch_size","switch_color"]}get value(){return this.getAttribute("value")}set value(e){this.setAttribute("value",e)}get checked(){return this.Input.checked}set checked(e){this.Input.checked=e,e?this.Base.classList.add("checked"):this.Base.classList.remove("checked")}get required(){return this.Input.required}set required(e){e?this.setAttribute("required",""):this.removeAttribute("required")}get disabled(){return this.Input.disabled}set disabled(e){e?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get switchSize(){return this.getAttribute("switch_size")||""}set switchSize(e){e?this.setAttribute("switch_size",e):this.removeAttribute("switch_size")}get switchColor(){return this.getAttribute("switch_color")||""}set switchColor(e){e?this.setAttribute("switch_color",e):this.removeAttribute("switch_color")}get form(){return this.internals_.form}get name(){return this.getAttribute("name")}get type(){return this.localName}get validity(){return this.internals_.validity}get validationMessage(){return this.internals_.validationMessage}get willValidate(){return this.internals_.willValidate}checkValidity=()=>this.internals_.checkValidity();reportValidity=()=>this.internals_.reportValidity();setFormValue(){this.checked?this.internals_.setFormValue(this.getAttribute("value")):this.internals_.setFormValue(null)}formDisabledCallback(e){this.Switch.className=e?"switch disabled":"switch",this.Input.disabled=e}formResetCallback(){this.Input.checked=this.hasAttribute("checked"),this.hasAttribute("checked")?this.Base.classList.add("checked"):this.Base.classList.remove("checked"),this.setFormValue(),this.validation()}constructor(){super(),this.internals_=this.attachInternals(),this.init()}init(){this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(this.getTemplate().content.cloneNode(!0)),this.Switch=this.shadowRoot.querySelector("label.switch"),this.Style=this.shadowRoot.querySelector("style"),this.Input=this.shadowRoot.querySelector("input"),this.Base=this.shadowRoot.querySelector("span.base")}getTemplate(){this.defaultSwitchSize="5.8rem",this.defaultSwitchColor="207, 90%, 77%",this.defaultValue="on",this.css="\n            *,*::before,*::after{margin:0;padding:0}label.switch{--switch-size: [[switch_size]];--switch-color: [[switch_color]];--hover: [[hover]];--hue-white: 0, 0%;--white: hsl(var(--hue-white), 100%);--white-transparent: hsla(var(--hue-white), 100%, .1);--grey-1: hsl(var(--hue-white), 50%);--grey-2: hsl(var(--hue-white), 30%);color-scheme:dark;position:relative;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;font-size:var(--switch-size);-webkit-box-sizing:border-box;box-sizing:border-box}label.switch *,label.switch *::before,label.switch *::after{-webkit-box-sizing:inherit;box-sizing:inherit}label.switch .wrapper{position:relative;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:1em;height:.655em;overflow:hidden;padding:.207em;z-index:0}label.switch .wrapper .base{position:absolute;left:0;top:0;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;-webkit-tap-highlight-color:transparent;padding:.155em;border-radius:50%;z-index:1;-webkit-transition:0.15s cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:0.15s cubic-bezier(0.4, 0, 0.2, 1) 0ms}label.switch .wrapper .base input{position:absolute;top:0;left:0;width:100%;height:100%;cursor:inherit;opacity:0;z-index:1}label.switch .wrapper .base .thumb{width:.345em;height:.345em;border-radius:50%;background-color:currentColor;-webkit-box-shadow:0 0.0345em 0.0172em -0.0172em rgba(0,0,0,0.2),0 0.0172em 0.0172em 0 rgba(0,0,0,0.14),0 0.0172em 0.0517em 0 rgba(0,0,0,0.12);box-shadow:0 0.0345em 0.0172em -0.0172em rgba(0,0,0,0.2),0 0.0172em 0.0172em 0 rgba(0,0,0,0.14),0 0.0172em 0.0517em 0 rgba(0,0,0,0.12)}label.switch .wrapper .base:hover,label.switch .wrapper .base.focus{background-color:var(--white-transparent)}label.switch .wrapper .base.checked{color:var(--switch-color);-webkit-transform:translateX(0.345em);transform:translateX(0.345em)}label.switch .wrapper .base.checked:hover,label.switch .wrapper .base.checked.focus{background-color:var(--hover)}label.switch .wrapper .base.checked+.track{background-color:var(--switch-color);opacity:.5}label.switch .wrapper .track{width:100%;height:100%;border-radius:.121em;-webkit-transition:0.15s cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:0.15s cubic-bezier(0.4, 0, 0.2, 1) 0ms;background-color:var(--white);opacity:.3;z-index:-1}label.switch .label{font-size:.276em}label.switch.disabled{cursor:default;pointer-events:none;color:var(--grey-1)}label.switch.disabled .wrapper .base.checked{color:var(--grey-1)}label.switch.disabled .wrapper .base.checked+.track{background-color:var(--white);opacity:.3}\n        ";const e=document.createElement("template");return e.innerHTML=`\n            <style>${this.css}</style>\n\n            <label class="switch">\n                <span class="wrapper">\n                    <span class="base">\n                        <input type="checkbox">\n                        <span class="thumb"></span>\n                    </span>\n                    <span class="track"></span>\n                </span>\n                <slot name="label" class="label"></slot>\n            </label>\n        `,e}validation(){!this.required||this.checked?this.internals_.setValidity({}):this.internals_.setValidity({valueMissing:!0},"Please switch this on if you want to proceed",this.Input)}addOpacityToColor(){if(!this.hasAttribute("switch_color"))return!1;const e=document.createElement("div");e.style.color=this.getAttribute("switch_color"),document.body.appendChild(e);const t=window.getComputedStyle(e).getPropertyValue("color").replace(/[rgba()]/g,"").split(", ");return document.body.removeChild(e),4===t.length?[`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`,`rgba(${t[0]}, ${t[1]}, ${t[2]}, .1)`]:[`rgb(${t[0]}, ${t[1]}, ${t[2]})`,`rgba(${t[0]}, ${t[1]}, ${t[2]}, .1)`]}updateSizeColor(){const e=this.addOpacityToColor();let t=this.css.replace("[[switch_size]]",this.getAttribute("switch_size")||this.defaultSwitchSize);e?(t=t.replace("[[switch_color]]",e[0]),t=t.replace("[[hover]]",e[1])):(t=t.replace("[[switch_color]]","hsl("+this.defaultSwitchColor+")"),t=t.replace("[[hover]]","hsl("+this.defaultSwitchColor+", .1)")),this.Style.innerHTML=t}connectedCallback(){this.Input.checked=this.hasAttribute("checked"),this.hasAttribute("checked")?this.Base.classList.add("checked"):this.Base.classList.remove("checked"),this.getAttribute("value")||this.setAttribute("value",this.defaultValue),this.updateSizeColor(),this.setFormValue(),this.validation(),this.Input.addEventListener("focus",(()=>this.Base.classList.add("focus"))),this.Input.addEventListener("blur",(()=>this.Base.classList.remove("focus"))),this.Input.addEventListener("change",(e=>{e.target.checked?this.Base.classList.add("checked"):this.Base.classList.remove("checked"),this.setFormValue(),this.validation()})),this.Input.addEventListener("keydown",(e=>{if("ENTER"===e.key.toUpperCase()){if(!this.form)return;let e=this.form.querySelector('[type="submit"]');if(e)return void e.click();const t=document.createElement("button");t.type="submit",t.style.display="none",this.form.appendChild(t),t.click(),t.remove()}}))}attributeChangedCallback(e,t,i){switch(e){case"value":this.getAttribute("value")||this.setAttribute("value",this.defaultValue),this.setFormValue();break;case"required":this.hasAttribute("required")?this.Input.setAttribute("required",""):this.Input.removeAttribute("required");break;case"switch_size":case"switch_color":this.updateSizeColor();break;default:}this.validation()}}window.customElements.define("rwc-switch",RWC_Switch);